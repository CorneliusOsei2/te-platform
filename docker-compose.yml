version: '3.10'

networks:
  te_network:
  
services:
  frontend:
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    restart: always
    build:
      context: ./te-frontend
      dockerfile: Dockerfile
    command: npm start
    networks:
      - te_network

  backend:
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    restart: always
    build:
      context: ./te-backend
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - te_network
    

  db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "${POSTGRES_HOST}", "-p", "${POSTGRES_PORT}", "-q", "-U", "${POSTGRES_USER}"]
    networks:
      - te_network
    
